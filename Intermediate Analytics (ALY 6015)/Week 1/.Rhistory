cat("\014") # clears console
rm(list = ls()) # clears global environment
try(dev.off(dev.list()["RStudioGD"]), silent = TRUE) # clears plots
try(p_unload(p_loaded(), character.only = TRUE), silent = TRUE) # clears packages
options(scipen = 100) # disables scientific notation for entire R session
# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Week - 1<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
# Q1)
ames <- read.csv("D:/NEU STUDY/2nd Quarter/Intermediate Analytics (ALY 6015)/Week 1/AmesHousing.csv")
# Q2)
head(ames)
names(ames)
View(ames)
summary(ames)
str(ames)
ames <- ames %>%
mutate_all(funs(ifelse(is.na(.), mean(., na.rm = TRUE), .)))
library(dplyr)
# Imputing missing values with mean
ames <- ames %>%
mutate_all(funs(ifelse(is.na(.), mean(., na.rm = TRUE), .)))
contd_vars <- ames%>% select_if(is.numeric)
rm(contd_vars)
numeric_vars <- ames%>% select_if(is.numeric)
rm(numeric_vars)
numeric_val <- ames%>% select_if(is.numeric)
cor_matrix <- cor(numeric_val)
cor_matrix
cor_plot <- ggcorrplot(cor_matrix) +
theme(axis.text.x = element_text(hjust = 0, angle = 90, size = 7)) +
theme(axis.text.y = element_text(size = 7)) +
scale_x_discrete(position = "top")
# Q5)
library(corrplot)
cor_plot <- ggcorrplot(cor_matrix) +
theme(axis.text.x = element_text(hjust = 0, angle = 90, size = 7)) +
theme(axis.text.y = element_text(size = 7)) +
scale_x_discrete(position = "top")
library(ggplot2)
cor_plot <- ggcorrplot(cor_matrix) +
theme(axis.text.x = element_text(hjust = 0, angle = 90, size = 7)) +
theme(axis.text.y = element_text(size = 7)) +
scale_x_discrete(position = "top")
library(ggcorrplot)
cor_plot <- corrplot(cor_matrix) +
theme(axis.text.x = element_text(hjust = 0, angle = 90, size = 7)) +
theme(axis.text.y = element_text(size = 7)) +
scale_x_discrete(position = "top")
cor_plot <- corrplot(
cor_matrix,
method = "color",
type = "upper",  # Display only upper triangle
tl.cex = 0.8,    # Text label size
tl.col = "black",# Text label color
tl.srt = 45,      # Text label rotation
cl.cex = 0.8,    # Cell label size
col = colorRampPalette(c("#FFFFFF", "#7CAE00", "#00274D"))(50), # Color scheme
addCoef.col = "black", # Coefficient color
number.cex = 0.8, # Correlation coefficient size
order = "hclust", # Hierarchical clustering
diag = FALSE     # Exclude diagonal elements
)
cor_plot <- corrplot(cor_matrix) +
theme(axis.text.x = element_text(hjust = 0, angle = 90, size = 7)) +
theme(axis.text.y = element_text(size = 7)) +
scale_x_discrete(position = "top")
cor_plot <- corrplot(cor_matrix) +
theme(axis.text.x = element_text(hjust = 0, angle = 90, size = 7)) +
theme(axis.text.y = element_text(size = 7)) +
scale_x_discrete(position = "top") +
title("Simplified Correlation Matrix", cex.main = 1.5)
cor_plot <- corrplot(
cor_matrix,
method = "color",
type = "upper",
tl.cex = 0.8,  # Adjust text label size
tl.col = "black",
cl.cex = 0.8,  # Adjust cell label size
col = colorRampPalette(c("#FFFFFF", "#7CAE00", "#00274D"))(50),  # Color scheme
addCoef.col = "black",
number.cex = 0.8,
order = "hclust"
)
cor_plot <- corrplot(
cor_matrix,
method = "color",
type = "upper",
tl.cex = 2.0,  # Adjust text label size
tl.col = "black",
cl.cex = 0.8,  # Adjust cell label size
col = colorRampPalette(c("#FFFFFF", "#7CAE00", "#00274D"))(50),  # Color scheme
addCoef.col = "black",
number.cex = 0.8,
order = "hclust"
)
cor_plot <- corrplot(
cor_matrix,
method = "color",
type = "upper",
tl.cex = 0.8,  # Adjust text label size
tl.col = "black",
cl.cex = 0.8,  # Adjust cell label size
col = colorRampPalette(c("#FFFFFF", "#7CAE00", "#00274D"))(50),  # Color scheme
addCoef.col = "black",
number.cex = 0.5,
order = "hclust"
)
cor_plot <- corrplot(cor_matrix) +
theme(axis.text.x = element_text(hjust = 0, angle = 90, size = 7)) +
theme(axis.text.y = element_text(size = 7)) +
scale_x_discrete(position = "top") +
title("Correlation Matrix", cex.main = 1.5)
color_palette <- colorRampPalette(c("#4575b4", "#91bfdb", "#fee08b", "#d73027"))(50)
cor_plot <- corrplot(
cor_matrix,
method = "color",
type = "upper",
tl.cex = 0.7,
tl.col = "black",
tl.srt = 45,
cl.cex = 0.8,
col = color_palette,  # Use custom color palette
addCoef.col = "black",
number.cex = 0.7,
order = "hclust"
) +
theme(axis.text.x = element_text(hjust = 0, angle = 90, size = 7)) +
theme(axis.text.y = element_text(size = 7)) +
scale_x_discrete(position = "top")
cor_plot <- corrplot(
cor_matrix,
method = "color",
type = "upper",
tl.cex = 0.7,
tl.col = "black",
tl.srt = 45,
cl.cex = 0.8,
col = color_palette,  # Use custom color palette
addCoef.col = "black",
number.cex = 0.7,
order = "hclust",
mar = c(0, 0, 2, 0)  # Adjust the margin to increase box size
) +
theme(axis.text.x = element_text(hjust = 0, angle = 90, size = 7)) +
theme(axis.text.y = element_text(size = 7)) +
scale_x_discrete(position = "top")
cor_plot <- corrplot(
cor_matrix,
method = "color",
type = "upper",
tl.cex = 0.7,
tl.col = "black",
tl.srt = 45,
cl.cex = 0.8,
col = color_palette,  # Use custom color palette
addCoef.col = "black",
number.cex = 0.7,
order = "hclust",
mar = c(0, 0, 6, 0)  # Adjust the margin to increase box size
) +
theme(axis.text.x = element_text(hjust = 0, angle = 90, size = 7)) +
theme(axis.text.y = element_text(size = 7)) +
scale_x_discrete(position = "top")
cor_plot <- corrplot(
cor_matrix,
method = "color",
type = "upper",
tl.cex = 0.7,
tl.col = "black",
tl.srt = 45,
cl.cex = 0.8,
col = color_palette,  # Use custom color palette
addCoef.col = "black",
number.cex = 0.7,
order = "hclust",
mar = c(0, 0, 0.1, 0)  # Adjust the margin to increase box size
) +
theme(axis.text.x = element_text(hjust = 0, angle = 90, size = 7)) +
theme(axis.text.y = element_text(size = 7)) +
scale_x_discrete(position = "top")
rm(color_palette)
cor_plot <- corrplot(cor_matrix) +
theme(axis.text.x = element_text(hjust = 0, angle = 90, size = 7)) +
theme(axis.text.y = element_text(size = 7)) +
scale_x_discrete(position = "top") +
title("Correlation Matrix", cex.main = 1.5)
cat("\014") # clears console
rm(list = ls()) # clears global environment
try(dev.off(dev.list()["RStudioGD"]), silent = TRUE) # clears plots
try(p_unload(p_loaded(), character.only = TRUE), silent = TRUE) # clears packages
options(scipen = 100) # disables scientific notation for entire R session
ames <- read.csv("D:/NEU STUDY/2nd Quarter/Intermediate Analytics (ALY 6015)/Week 1/AmesHousing.csv")
# Q2)
head(ames)
names(ames)
View(ames)
summary(ames)
str(ames)
# Q3)
library(dplyr)
# Imputing missing values with mean
ames <- ames %>%
mutate_all(funs(ifelse(is.na(.), mean(., na.rm = TRUE), .)))
# Q4)
contd_vars <- ames[c("SalePrice", "Lot.Frontage", "Lot.Area", "Mas.Vnr.Area", "BsmtFin.SF.1", "BsmtFin.SF.2",
"Bsmt.Unf.SF", "Total.Bsmt.SF", "1st.Flr.SF", "2nd.Flr.SF", "Low.Qual.Fin.SF",
"Gr.Liv.Area", "Garage.Area", "Wood.Deck.SF", "Open.Porch.SF", "Enclosed.Porch",
"3Ssn.Porch", "Screen.Porch", "Pool.Area", "Misc.Val")]
contd_vars <- ames[c("SalePrice", "Lot.Frontage", "Lot.Area", "Mas.Vnr.Area", "BsmtFin.SF.1", "BsmtFin.SF.2",
"Bsmt.Unf.SF", "Total.Bsmt.SF", "1st.Flr.SF", "2nd.Flr.SF", "Low.Qual.Fin.SF",
"Gr.Liv.Area", "Garage.Area", "Wood.Deck.SF", "Open.Porch.SF", "Enclosed.Porch",
"3-Ssn.Porch", "Screen.Porch", "Pool.Area", "Misc.Val")]
View(ames)
contd_vars <- ames[c("SalePrice", "Lot.Frontage", "Lot.Area", "Pool.Area", "Gr.Liv.Area",
"Wood.Deck.SF", "Open.Porch.SF", "Enclosed.Porch")]
contd_vars
cm <- cor(contd_vars)
cm
corrplot(cm, method = "color")
corrplot(cm, method = "color", type = "lower", tl.cex = 0.9, tl.col = "black",
addCoef.col = "orange")
corrplot(cm, method = "color", type = "upper", tl.cex = 0.9, tl.col = "black",
addCoef.col = "orange")
corrplot(cm, method = "color", type = "upper", tl.cex = 0.9, tl.col = "black",
addCoef.col = "black")
scatterplot(ames$SalePrice, ames$Gr.Liv.Area, main = "Scatter Plot - Ground Living Area vs Sale
Price", xlab = "Sale Price", ylab = "Ground Living Area", pch = 16, col =
brewer.pal(length(ames$SalePrice), "Dark2"))
detach("package:ggplot2", unload = TRUE)
library(ggplot2)
scatterplot(ames$SalePrice, ames$Gr.Liv.Area, main = "Scatter Plot - Ground Living Area vs Sale
Price", xlab = "Sale Price", ylab = "Ground Living Area", pch = 16, col =
brewer.pal(length(ames$SalePrice), "Dark2"))
corrplot(cm, method = "color", type = "upper", tl.cex = 0.9, tl.col = "black",
addCoef.col = "black")
library(ggplot2)
scatterplot(ames$SalePrice, ames$Gr.Liv.Area, main = "Scatter Plot - Ground Living Area vs Sale
Price", xlab = "Sale Price", ylab = "Ground Living Area", pch = 16, col =
brewer.pal(length(ames$SalePrice), "Dark2"))
ggplot(ames, aes(x = SalePrice, y = Gr.Liv.Area, color = SalePrice)) +
geom_point() +
labs(title = "Scatter Plot - Ground Living Area vs Sale Price",
x = "Sale Price",
y = "Ground Living Area")
scatterplot(ames, aes(x = SalePrice, y = Gr.Liv.Area, color = SalePrice)) +
geom_point() +
labs(title = "Scatter Plot - Ground Living Area vs Sale Price",
x = "Sale Price",
y = "Ground Living Area")
ggplot(ames, aes(x = SalePrice, y = Pool.Area, color = SalePrice)) +
geom_point() +
labs(title = "Scatter Plot - Pool Area vs Sale Price",
x = "Sale Price",
y = "Pool Area")
ggplot(ames, aes(x = SalePrice, y = Lot.Frontage, color = SalePrice)) +
geom_point() +
labs(title = "Scatter Plot - Lot Frontage vs Sale Price",
x = "Sale Price",
y = "Lot Frontage")
reg_model <- lm(SalePrice ~ BsmtFin.SF.1 + BsmtFin.SF.2 + Bsmt.Unf.SF, data = ames)
reg_model
# Q8)
summary(reg_model)
col_palette <- viridis(1)
library(virdis)
install.packages("virdis")
library(virdis)
col_palette <- viridis(1)
install.packages("viridis")
col_palette <- viridis(1)
library(viridis)
col_palette <- viridis(1)
par(mfrow = c(2, 2))
plot(reg_model, col = col_palette)
col_palette <- viridis(5)
par(mfrow = c(2, 2))
plot(reg_model, col = col_palette)
col_palette <- viridis(3)
par(mfrow = c(2, 2))
plot(reg_model, col = col_palette)
col_palette <- viridis(7)
par(mfrow = c(2, 2))
plot(reg_model, col = col_palette)
col_palette <- viridis(2)
par(mfrow = c(2, 2))
plot(reg_model, col = col_palette)
col_palette <- viridis(5)
par(mfrow = c(2, 2))
plot(reg_model, col = col_palette)
col_palette <- viridis(9)
par(mfrow = c(2, 2))
plot(reg_model, col = col_palette)
col_palette <- viridis(3)
par(mfrow = c(2, 2))
plot(reg_model, col = col_palette)
col_palette <- viridis(100)
par(mfrow = c(2, 2))
plot(reg_model, col = col_palette)
col_palette <- viridis(200)
par(mfrow = c(2, 2))
plot(reg_model, col = col_palette)
col_palette <- viridis(255)
par(mfrow = c(2, 2))
plot(reg_model, col = col_palette)
col_palette <- viridis(1)
par(mfrow = c(2, 2))
plot(reg_model, col = col_palette)
col_palette <- viridis(2)
par(mfrow = c(2, 2))
plot(reg_model, col = col_palette)
col_palette <- viridis(1)
par(mfrow = c(2, 2))
plot(reg_model, col = col_palette)
vif(reg_model)
library(car)
install.packages("car")
library(car)
library(car)
vif(reg_model)
library(carData)
vif(reg_model)
library(car)
install.packages("car")
library(car)
vif(reg_model)
ot <- outlierTest(reg_model)
ot
row_del <- c(1499,2181,1768,1761,2451,434,2446,2331,2667,2333)
ames <- ames[-row_del, ]
reg_model <- lm(SalePrice ~ BsmtFin.SF.1 + BsmtFin.SF.2 + Bsmt.Unf.SF, data = ames)
summary(reg_model)
# Q13)
install.packages('leaps')
library(leaps)
subset_models = regsubsets(SalePrice ~ BsmtFin.SF.1 + BsmtFin.SF.2 + Bsmt.Unf.SF, data = df,
nbest = 3)
subset_models = regsubsets(SalePrice ~ BsmtFin.SF.1 + BsmtFin.SF.2 + Bsmt.Unf.SF, data = ames,
nbest = 3)
summary(subset_models)
rm(subset_models)
mod_sub = regsubsets(SalePrice ~ BsmtFin.SF.1 + BsmtFin.SF.2 + Bsmt.Unf.SF, data = ames,
nbest = 3)
summary(mod_sub)
rm(reg_model)
reg_mod <- lm(SalePrice ~ BsmtFin.SF.1 + BsmtFin.SF.2 + Bsmt.Unf.SF, data = ames)
# Q8)
summary(reg_mod)
# Q9)
install.packages("viridis")
library(viridis)
col_palette <- viridis(1)
par(mfrow = c(2, 2))
plot(reg_mod, col = col_palette)
# Q10)
install.packages("car")
library(car)
vif(reg_mod)
# Q11)
ot <- outlierTest(reg_mod)
# Q12)
row_del <- c(1499,2181,1768,1761,2451,434,2446,2331,2667,2333)
ames <- ames[-row_del, ]
reg_mod <- lm(SalePrice ~ BsmtFin.SF.1 + BsmtFin.SF.2 + Bsmt.Unf.SF, data = ames)
summary(reg_mod)
# Q13)
install.packages('leaps')
library(leaps)
mod_sub = regsubsets(SalePrice ~ BsmtFin.SF.1 + BsmtFin.SF.2 + Bsmt.Unf.SF, data = ames,
nbest = 3)
summary(mod_sub)
install.packages("leaps")
install.packages("car")
install.packages("viridis")
cm
corrplot(cm, method = "color", type = "upper", tl.cex = 0.9, tl.col = "black",
addCoef.col = "black")
corrplot(cm, method = "color", type = "upper", tl.cex = 0.9, tl.col = "black",
addCoef.col = "black") +
title = "Correlation plot"
corrplot(cm, method = "color", type = "upper", tl.cex = 0.9, tl.col = "black",
addCoef.col = "black", title = "Correlation plot")
cat("\014") # clears console
rm(list = ls()) # clears global environment
try(dev.off(dev.list()["RStudioGD"]), silent = TRUE) # clears plots
try(p_unload(p_loaded(), character.only = TRUE), silent = TRUE) # clears packages
options(scipen = 100) # disables scientific notation for entire R session
# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Week - 1<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
# Q1)
ames <- read.csv("D:/NEU STUDY/2nd Quarter/Intermediate Analytics (ALY 6015)/Week 1/AmesHousing.csv")
# Q2)
head(ames)
names(ames)
View(ames)
summary(ames)
str(ames)
# Q3)
library(dplyr)
# Imputing missing values with mean
ames <- ames %>%
mutate_all(funs(ifelse(is.na(.), mean(., na.rm = TRUE), .)))
# Q4)
# Continuous numeric variables of interest
contd_vars <- ames[c("SalePrice", "Lot.Frontage", "Lot.Area", "Pool.Area", "Gr.Liv.Area",
"Wood.Deck.SF", "Open.Porch.SF", "Enclosed.Porch")]
cm <- cor(contd_vars)
library(corrplot)
corrplot(cm, method = "color", type = "upper", tl.cex = 0.9, tl.col = "black",
addCoef.col = "black", title = "Correlation plot")
corrplot(cm, method = "color", type = "upper", tl.cex = 0.9, tl.col = "black",
addCoef.col = "black", title = "Correlation plot", title.pos = "bottom")
ggplot(ames, aes(x = SalePrice, y = Gr.Liv.Area, color = SalePrice)) +
geom_point() +
labs(title = "Scatter Plot - Ground Living Area vs Sale Price",
x = "Sale Price",
y = "Ground Living Area")
ggplot(ames, aes(x = SalePrice, y = Gr.Liv.Area, color = SalePrice)) +
geom_point() +
labs(title = "Scatter Plot: Sale Price vs Ground Living Area",
x = "Sale Price",
y = "Ground Living Area")
ggplot(ames, aes(x = SalePrice, y = Pool.Area, color = SalePrice)) +
geom_point() +
labs(title = "Scatter Plot: Sale Price  vs Pool Area",
x = "Sale Price",
y = "Pool Area")
ggplot(ames, aes(x = SalePrice, y = Lot.Frontage, color = SalePrice)) +
geom_point() +
labs(title = "Scatter Plot: Sale Price vs Lot Frontage",
x = "Sale Price",
y = "Lot Frontage")
reg_mod
reg_mod <- lm(SalePrice ~ BsmtFin.SF.1 + BsmtFin.SF.2 + Bsmt.Unf.SF, data = ames)
# Q8)
summary(reg_mod)
reg_mod
summary(reg_mod)
# Q9)
install.packages("viridis")
library(viridis)
col_palette <- viridis(1)
par(mfrow = c(2, 2))
plot(reg_mod, col = col_palette)
install.packages("viridis")
vif(reg_mod)
summary(reg_mod)
reg_mod
ot
ot <- outlierTest(reg_mod)
ot
summary(reg_mod)
summary(mod_sub)
install.packages('leaps')
library(leaps)
mod_sub = regsubsets(SalePrice ~ BsmtFin.SF.1 + BsmtFin.SF.2 + Bsmt.Unf.SF, data = ames,
nbest = 3)
summary(mod_sub)
install.packages("leaps")
